[2025-01-22 09:44:56,709: INFO: _client: HTTP Request: GET https://dagshub.com/api/v1/user "HTTP/1.1 200 OK"]
[2025-01-22 09:44:56,725: INFO: helpers: Accessing as ArpitKadam]
[2025-01-22 09:44:57,282: INFO: _client: HTTP Request: GET https://dagshub.com/api/v1/repos/ArpitKadam/Insurance-Fraud-Detection "HTTP/1.1 200 OK"]
[2025-01-22 09:44:57,859: INFO: _client: HTTP Request: GET https://dagshub.com/api/v1/user "HTTP/1.1 200 OK"]
[2025-01-22 09:44:57,863: INFO: helpers: Initialized MLflow to track repo "ArpitKadam/Insurance-Fraud-Detection"]
[2025-01-22 09:44:57,865: INFO: helpers: Repository ArpitKadam/Insurance-Fraud-Detection initialized!]
[2025-01-22 09:44:57,910: INFO: main: >>>>>>>>>>>>>>>Stage Data Ingestion Stage started<<<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:57,911: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\config\config.yaml]
[2025-01-22 09:44:57,932: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\params.yaml]
[2025-01-22 09:44:57,937: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\schema.yaml]
[2025-01-22 09:44:57,945: INFO: configuration: Config: {'artifacts_root': 'artifacts', 'data_ingestion': {'root_dir': 'artifacts/data_ingestion', 'source_url': 'https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', 'local_data_file': 'artifacts/data_ingestion/data.zip', 'unzip_dir': 'artifacts/data_ingestion'}, 'data_validation': {'root_dir': 'artifacts/data_validation', 'unzip_data_dir': 'artifacts/data_ingestion/insurance_claims.csv', 'STATUS_FILE': 'artifacts/data_validation/STATUS.txt'}, 'data_transformation': {'root_dir': 'artifacts/data_transformation', 'data_path': 'artifacts/data_ingestion/insurance_claims.csv'}, 'model_trainer': {'root_dir': 'artifacts/model_trainer', 'train_data_path': 'artifacts/data_transformation/train.csv', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_name': 'GradientBoostingClassifier.joblib', 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}, 'model_evaluation': {'root_dir': 'artifacts/model_evaluation', 'artifact_dir': 'artifacts/model_evaluation', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_path': 'artifacts/model_trainer/GradientBoostingClassifier.joblib', 'metric_file_name': 'artifacts/model_evaluation/metrics.json', 'mlflow_uri': 'https://dagshub.com/ArpitKadam/Insurance-Fraud-Detection.mlflow', 'target_column': 'fraud_reported', 'mlflow_experiment_name': 'Insurance-Fraud-Detection'}}]
[2025-01-22 09:44:57,947: INFO: configuration: Params: {'GradientBoostingClassifier': {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}}]
[2025-01-22 09:44:57,948: INFO: configuration: Schema: {'COLUMNS': {'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'}, 'TARGET_COLUMN': {'fraud_reported': 'object'}}]
[2025-01-22 09:44:57,950: INFO: configuration: Artifacts Root: artifacts]
[2025-01-22 09:44:57,950: INFO: common: Directory created: artifacts]
[2025-01-22 09:44:57,951: INFO: configuration: Config: {'root_dir': 'artifacts/data_ingestion', 'source_url': 'https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', 'local_data_file': 'artifacts/data_ingestion/data.zip', 'unzip_dir': 'artifacts/data_ingestion'}]
[2025-01-22 09:44:57,952: INFO: common: Directory created: artifacts/data_ingestion]
[2025-01-22 09:44:57,952: INFO: configuration: Root Dir: artifacts/data_ingestion]
[2025-01-22 09:44:57,953: INFO: configuration: Data Ingestion Config: DataIngestionConfig(root_dir='artifacts/data_ingestion', source_url='https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', local_data_file='artifacts/data_ingestion/data.zip', unzip_dir='artifacts/data_ingestion')]
[2025-01-22 09:44:57,954: INFO: configuration: Data Ingestion Config Root Dir: artifacts/data_ingestion]
[2025-01-22 09:44:57,954: INFO: configuration: Data Ingestion Config Source URL: https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip]
[2025-01-22 09:44:57,955: INFO: configuration: Data Ingestion Config Local Data File: artifacts/data_ingestion/data.zip]
[2025-01-22 09:44:57,955: INFO: configuration: Data Ingestion Config Unzip Dir: artifacts/data_ingestion]
[2025-01-22 09:44:57,956: INFO: data_ingestion: Downloading data from https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip]
[2025-01-22 09:44:57,957: INFO: data_ingestion: Extracting data from artifacts/data_ingestion/data.zip]
[2025-01-22 09:44:57,962: INFO: data_ingestion: Extracted data from artifacts/data_ingestion/data.zip to artifacts/data_ingestion]
[2025-01-22 09:44:57,963: INFO: data_ingestion: Data ingestion completed successfully. Files are saved in artifacts/data_ingestion]
[2025-01-22 09:44:57,963: INFO: main: >>>>>>>>>>>>>>>Stage Data Ingestion Stage completed<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:57,968: INFO: main: >>>>>>>>>>>>>>>Stage Data Validation Stage started<<<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:57,970: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\config\config.yaml]
[2025-01-22 09:44:57,976: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\params.yaml]
[2025-01-22 09:44:57,978: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\schema.yaml]
[2025-01-22 09:44:57,988: INFO: configuration: Config: {'artifacts_root': 'artifacts', 'data_ingestion': {'root_dir': 'artifacts/data_ingestion', 'source_url': 'https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', 'local_data_file': 'artifacts/data_ingestion/data.zip', 'unzip_dir': 'artifacts/data_ingestion'}, 'data_validation': {'root_dir': 'artifacts/data_validation', 'unzip_data_dir': 'artifacts/data_ingestion/insurance_claims.csv', 'STATUS_FILE': 'artifacts/data_validation/STATUS.txt'}, 'data_transformation': {'root_dir': 'artifacts/data_transformation', 'data_path': 'artifacts/data_ingestion/insurance_claims.csv'}, 'model_trainer': {'root_dir': 'artifacts/model_trainer', 'train_data_path': 'artifacts/data_transformation/train.csv', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_name': 'GradientBoostingClassifier.joblib', 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}, 'model_evaluation': {'root_dir': 'artifacts/model_evaluation', 'artifact_dir': 'artifacts/model_evaluation', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_path': 'artifacts/model_trainer/GradientBoostingClassifier.joblib', 'metric_file_name': 'artifacts/model_evaluation/metrics.json', 'mlflow_uri': 'https://dagshub.com/ArpitKadam/Insurance-Fraud-Detection.mlflow', 'target_column': 'fraud_reported', 'mlflow_experiment_name': 'Insurance-Fraud-Detection'}}]
[2025-01-22 09:44:57,989: INFO: configuration: Params: {'GradientBoostingClassifier': {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}}]
[2025-01-22 09:44:57,990: INFO: configuration: Schema: {'COLUMNS': {'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'}, 'TARGET_COLUMN': {'fraud_reported': 'object'}}]
[2025-01-22 09:44:57,992: INFO: configuration: Artifacts Root: artifacts]
[2025-01-22 09:44:57,993: INFO: common: Directory created: artifacts]
[2025-01-22 09:44:57,994: INFO: common: Directory created: artifacts/data_validation]
[2025-01-22 09:44:57,994: INFO: configuration: Data Validation Config: DataValidationConfig(root_dir='artifacts/data_validation', unzip_data_dir='artifacts/data_ingestion/insurance_claims.csv', STATUS_FILE='artifacts/data_validation/STATUS.txt', all_schema={'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'})]
[2025-01-22 09:44:57,997: INFO: configuration: Data Validation Config Root Dir: artifacts/data_validation]
[2025-01-22 09:44:57,998: INFO: configuration: Data Validation Config Unzip Data Dir: artifacts/data_ingestion/insurance_claims.csv]
[2025-01-22 09:44:57,998: INFO: configuration: Data Validation Config Status File: artifacts/data_validation/STATUS.txt]
[2025-01-22 09:44:57,998: INFO: configuration: Data Validation Config All Schema: {'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'}]
[2025-01-22 09:44:57,999: INFO: data_validation: Validating all columns in artifacts/data_ingestion/insurance_claims.csv]
[2025-01-22 09:44:58,032: INFO: data_validation: Reading data from artifacts/data_ingestion/insurance_claims.csv]
[2025-01-22 09:44:58,034: INFO: data_validation: Checking column: months_as_customer, Expected: int64, Found: int64]
[2025-01-22 09:44:58,035: INFO: data_validation: Checking column: age, Expected: int64, Found: int64]
[2025-01-22 09:44:58,035: INFO: data_validation: Checking column: policy_number, Expected: int64, Found: int64]
[2025-01-22 09:44:58,036: INFO: data_validation: Checking column: policy_bind_date, Expected: object, Found: object]
[2025-01-22 09:44:58,036: INFO: data_validation: Checking column: policy_state, Expected: object, Found: object]
[2025-01-22 09:44:58,037: INFO: data_validation: Checking column: policy_csl, Expected: object, Found: object]
[2025-01-22 09:44:58,037: INFO: data_validation: Checking column: policy_deductable, Expected: int64, Found: int64]
[2025-01-22 09:44:58,038: INFO: data_validation: Checking column: policy_annual_premium, Expected: float64, Found: float64]
[2025-01-22 09:44:58,038: INFO: data_validation: Checking column: umbrella_limit, Expected: int64, Found: int64]
[2025-01-22 09:44:58,039: INFO: data_validation: Checking column: insured_zip, Expected: int64, Found: int64]
[2025-01-22 09:44:58,040: INFO: data_validation: Checking column: insured_sex, Expected: object, Found: object]
[2025-01-22 09:44:58,041: INFO: data_validation: Checking column: insured_education_level, Expected: object, Found: object]
[2025-01-22 09:44:58,041: INFO: data_validation: Checking column: insured_occupation, Expected: object, Found: object]
[2025-01-22 09:44:58,043: INFO: data_validation: Checking column: insured_hobbies, Expected: object, Found: object]
[2025-01-22 09:44:58,046: INFO: data_validation: Checking column: insured_relationship, Expected: object, Found: object]
[2025-01-22 09:44:58,048: INFO: data_validation: Checking column: capital-gains, Expected: int64, Found: int64]
[2025-01-22 09:44:58,049: INFO: data_validation: Checking column: capital-loss, Expected: int64, Found: int64]
[2025-01-22 09:44:58,050: INFO: data_validation: Checking column: incident_date, Expected: object, Found: object]
[2025-01-22 09:44:58,050: INFO: data_validation: Checking column: incident_type, Expected: object, Found: object]
[2025-01-22 09:44:58,051: INFO: data_validation: Checking column: collision_type, Expected: object, Found: object]
[2025-01-22 09:44:58,051: INFO: data_validation: Checking column: incident_severity, Expected: object, Found: object]
[2025-01-22 09:44:58,052: INFO: data_validation: Checking column: authorities_contacted, Expected: object, Found: object]
[2025-01-22 09:44:58,053: INFO: data_validation: Checking column: incident_state, Expected: object, Found: object]
[2025-01-22 09:44:58,054: INFO: data_validation: Checking column: incident_city, Expected: object, Found: object]
[2025-01-22 09:44:58,054: INFO: data_validation: Checking column: incident_location, Expected: object, Found: object]
[2025-01-22 09:44:58,055: INFO: data_validation: Checking column: incident_hour_of_the_day, Expected: int64, Found: int64]
[2025-01-22 09:44:58,057: INFO: data_validation: Checking column: number_of_vehicles_involved, Expected: int64, Found: int64]
[2025-01-22 09:44:58,059: INFO: data_validation: Checking column: property_damage, Expected: object, Found: object]
[2025-01-22 09:44:58,059: INFO: data_validation: Checking column: bodily_injuries, Expected: int64, Found: int64]
[2025-01-22 09:44:58,062: INFO: data_validation: Checking column: witnesses, Expected: int64, Found: int64]
[2025-01-22 09:44:58,064: INFO: data_validation: Checking column: police_report_available, Expected: object, Found: object]
[2025-01-22 09:44:58,065: INFO: data_validation: Checking column: total_claim_amount, Expected: int64, Found: int64]
[2025-01-22 09:44:58,065: INFO: data_validation: Checking column: injury_claim, Expected: int64, Found: int64]
[2025-01-22 09:44:58,066: INFO: data_validation: Checking column: property_claim, Expected: int64, Found: int64]
[2025-01-22 09:44:58,067: INFO: data_validation: Checking column: vehicle_claim, Expected: int64, Found: int64]
[2025-01-22 09:44:58,067: INFO: data_validation: Checking column: auto_make, Expected: object, Found: object]
[2025-01-22 09:44:58,068: INFO: data_validation: Checking column: auto_model, Expected: object, Found: object]
[2025-01-22 09:44:58,068: INFO: data_validation: Checking column: auto_year, Expected: int64, Found: int64]
[2025-01-22 09:44:58,069: INFO: data_validation: Checking column: fraud_reported, Expected: object, Found: object]
[2025-01-22 09:44:58,070: INFO: data_validation: All columns are valid and have correct data types.]
[2025-01-22 09:44:58,071: INFO: data_validation: Writing validation status to artifacts/data_validation/STATUS.txt]
[2025-01-22 09:44:58,264: INFO: data_validation: Validation completed successfully. Status file saved to artifacts/data_validation/STATUS.txt]
[2025-01-22 09:44:58,265: INFO: data_validation: Validation status: True]
[2025-01-22 09:44:58,266: INFO: main: >>>>>>>>>>>>>>>Stage Data Validation Stage completed<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:58,266: INFO: main: >>>>>>>>>>>>>>>Stage Data Transformation Stage started<<<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:58,269: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\config\config.yaml]
[2025-01-22 09:44:58,282: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\params.yaml]
[2025-01-22 09:44:58,284: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\schema.yaml]
[2025-01-22 09:44:58,289: INFO: configuration: Config: {'artifacts_root': 'artifacts', 'data_ingestion': {'root_dir': 'artifacts/data_ingestion', 'source_url': 'https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', 'local_data_file': 'artifacts/data_ingestion/data.zip', 'unzip_dir': 'artifacts/data_ingestion'}, 'data_validation': {'root_dir': 'artifacts/data_validation', 'unzip_data_dir': 'artifacts/data_ingestion/insurance_claims.csv', 'STATUS_FILE': 'artifacts/data_validation/STATUS.txt'}, 'data_transformation': {'root_dir': 'artifacts/data_transformation', 'data_path': 'artifacts/data_ingestion/insurance_claims.csv'}, 'model_trainer': {'root_dir': 'artifacts/model_trainer', 'train_data_path': 'artifacts/data_transformation/train.csv', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_name': 'GradientBoostingClassifier.joblib', 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}, 'model_evaluation': {'root_dir': 'artifacts/model_evaluation', 'artifact_dir': 'artifacts/model_evaluation', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_path': 'artifacts/model_trainer/GradientBoostingClassifier.joblib', 'metric_file_name': 'artifacts/model_evaluation/metrics.json', 'mlflow_uri': 'https://dagshub.com/ArpitKadam/Insurance-Fraud-Detection.mlflow', 'target_column': 'fraud_reported', 'mlflow_experiment_name': 'Insurance-Fraud-Detection'}}]
[2025-01-22 09:44:58,294: INFO: configuration: Params: {'GradientBoostingClassifier': {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}}]
[2025-01-22 09:44:58,295: INFO: configuration: Schema: {'COLUMNS': {'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'}, 'TARGET_COLUMN': {'fraud_reported': 'object'}}]
[2025-01-22 09:44:58,298: INFO: configuration: Artifacts Root: artifacts]
[2025-01-22 09:44:58,301: INFO: common: Directory created: artifacts]
[2025-01-22 09:44:58,302: INFO: common: Directory created: artifacts/data_transformation]
[2025-01-22 09:44:58,302: INFO: configuration: Data Transformation Config: DataTransformationConfig(root_dir='artifacts/data_transformation', data_path='artifacts/data_ingestion/insurance_claims.csv')]
[2025-01-22 09:44:58,303: INFO: configuration: Data Transformation Config Root Dir: artifacts/data_transformation]
[2025-01-22 09:44:58,303: INFO: configuration: Data Transformation Config Data Path: artifacts/data_ingestion/insurance_claims.csv]
[2025-01-22 09:44:58,304: INFO: data_transformation: Reading data from artifacts/data_ingestion/insurance_claims.csv]
[2025-01-22 09:44:58,323: INFO: data_transformation: Data read successfully from artifacts/data_ingestion/insurance_claims.csv]
[2025-01-22 09:44:58,333: INFO: data_transformation: Removed Meaningless columns]
[2025-01-22 09:44:58,337: INFO: data_transformation: Replaced '?' with NaN in categorical columns]
[2025-01-22 09:44:58,339: INFO: data_transformation: Numerical columns: Index(['months_as_customer', 'age', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'capital-gains',
       'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'total_claim_amount', 'injury_claim', 'property_claim', 'vehicle_claim',
       'auto_year'],
      dtype='object')]
[2025-01-22 09:44:58,343: INFO: data_transformation: Categorical columns: Index(['policy_bind_date', 'policy_state', 'policy_csl', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'property_damage', 'police_report_available', 'auto_make', 'auto_model',
       'fraud_reported'],
      dtype='object')]
[2025-01-22 09:44:58,348: INFO: data_transformation: Filling NaN values in policy_bind_date with mode of policy_bind_date]
[2025-01-22 09:44:58,350: INFO: data_transformation: Filling NaN values in policy_state with mode of policy_state]
[2025-01-22 09:44:58,352: INFO: data_transformation: Filling NaN values in policy_csl with mode of policy_csl]
[2025-01-22 09:44:58,354: INFO: data_transformation: Filling NaN values in insured_sex with mode of insured_sex]
[2025-01-22 09:44:58,356: INFO: data_transformation: Filling NaN values in insured_education_level with mode of insured_education_level]
[2025-01-22 09:44:58,357: INFO: data_transformation: Filling NaN values in insured_occupation with mode of insured_occupation]
[2025-01-22 09:44:58,362: INFO: data_transformation: Filling NaN values in insured_relationship with mode of insured_relationship]
[2025-01-22 09:44:58,363: INFO: data_transformation: Filling NaN values in incident_date with mode of incident_date]
[2025-01-22 09:44:58,365: INFO: data_transformation: Filling NaN values in incident_type with mode of incident_type]
[2025-01-22 09:44:58,367: INFO: data_transformation: Filling NaN values in collision_type with mode of collision_type]
[2025-01-22 09:44:58,369: INFO: data_transformation: Filling NaN values in incident_severity with mode of incident_severity]
[2025-01-22 09:44:58,370: INFO: data_transformation: Filling NaN values in authorities_contacted with mode of authorities_contacted]
[2025-01-22 09:44:58,371: INFO: data_transformation: Filling NaN values in incident_state with mode of incident_state]
[2025-01-22 09:44:58,372: INFO: data_transformation: Filling NaN values in incident_city with mode of incident_city]
[2025-01-22 09:44:58,375: INFO: data_transformation: Filling NaN values in property_damage with mode of property_damage]
[2025-01-22 09:44:58,378: INFO: data_transformation: Filling NaN values in police_report_available with mode of police_report_available]
[2025-01-22 09:44:58,380: INFO: data_transformation: Filling NaN values in auto_make with mode of auto_make]
[2025-01-22 09:44:58,381: INFO: data_transformation: Filling NaN values in auto_model with mode of auto_model]
[2025-01-22 09:44:58,383: INFO: data_transformation: Filling NaN values in fraud_reported with mode of fraud_reported]
[2025-01-22 09:44:58,384: INFO: data_transformation: Filling NaN values in months_as_customer with median of months_as_customer]
[2025-01-22 09:44:58,386: INFO: data_transformation: Filling NaN values in age with median of age]
[2025-01-22 09:44:58,387: INFO: data_transformation: Filling NaN values in policy_deductable with median of policy_deductable]
[2025-01-22 09:44:58,388: INFO: data_transformation: Filling NaN values in policy_annual_premium with median of policy_annual_premium]
[2025-01-22 09:44:58,391: INFO: data_transformation: Filling NaN values in umbrella_limit with median of umbrella_limit]
[2025-01-22 09:44:58,394: INFO: data_transformation: Filling NaN values in capital-gains with median of capital-gains]
[2025-01-22 09:44:58,397: INFO: data_transformation: Filling NaN values in capital-loss with median of capital-loss]
[2025-01-22 09:44:58,398: INFO: data_transformation: Filling NaN values in incident_hour_of_the_day with median of incident_hour_of_the_day]
[2025-01-22 09:44:58,402: INFO: data_transformation: Filling NaN values in number_of_vehicles_involved with median of number_of_vehicles_involved]
[2025-01-22 09:44:58,403: INFO: data_transformation: Filling NaN values in bodily_injuries with median of bodily_injuries]
[2025-01-22 09:44:58,405: INFO: data_transformation: Filling NaN values in witnesses with median of witnesses]
[2025-01-22 09:44:58,407: INFO: data_transformation: Filling NaN values in total_claim_amount with median of total_claim_amount]
[2025-01-22 09:44:58,410: INFO: data_transformation: Filling NaN values in injury_claim with median of injury_claim]
[2025-01-22 09:44:58,412: INFO: data_transformation: Filling NaN values in property_claim with median of property_claim]
[2025-01-22 09:44:58,414: INFO: data_transformation: Filling NaN values in vehicle_claim with median of vehicle_claim]
[2025-01-22 09:44:58,416: INFO: data_transformation: Filling NaN values in auto_year with median of auto_year]
[2025-01-22 09:44:58,418: INFO: data_transformation: Calculating loss ratio]
[2025-01-22 09:44:58,419: INFO: data_transformation: Calculating profitability]
[2025-01-22 09:44:58,421: INFO: data_transformation: Calculating vehicle age]
[2025-01-22 09:44:58,424: INFO: data_transformation: Dropped auto_year column]
[2025-01-22 09:44:58,435: INFO: data_transformation: Dropped incident_date column]
[2025-01-22 09:44:58,444: INFO: data_transformation: Dropping policy_bind_date column]
[2025-01-22 09:44:58,450: INFO: data_transformation: One-hot encoding incident_type column]
[2025-01-22 09:44:58,455: INFO: data_transformation: One-hot encoding collision_type column]
[2025-01-22 09:44:58,462: INFO: data_transformation: One-hot encoding authorities_contacted column]
[2025-01-22 09:44:58,467: INFO: data_transformation: One-hot encoding incident_severity column]
[2025-01-22 09:44:58,471: INFO: data_transformation: One-hot encoding policy_csl column]
[2025-01-22 09:44:58,477: INFO: data_transformation: Creating age_group column]
[2025-01-22 09:44:58,491: INFO: data_transformation: Encoding categorical columns]
[2025-01-22 09:44:58,492: INFO: data_transformation: Separating majority and minority classes]
[2025-01-22 09:44:58,496: INFO: data_transformation: Successfully separated majority and minority classes]
[2025-01-22 09:44:58,497: INFO: data_transformation: Performing undersampling on the majority class]
[2025-01-22 09:44:58,498: INFO: data_transformation: Performing oversampling on the minority class]
[2025-01-22 09:44:58,503: INFO: data_transformation: Successfully combined balanced classes]
[2025-01-22 09:44:58,504: INFO: data_transformation: Shuffling the dataset]
[2025-01-22 09:44:58,510: INFO: data_transformation: Successfully shuffled the dataset]
[2025-01-22 09:44:58,513: INFO: data_transformation: Successfully split the dataset into train and test]
[2025-01-22 09:44:58,532: INFO: data_transformation: Successfully saved train data to artifacts/data_transformation\train.csv]
[2025-01-22 09:44:58,533: INFO: data_transformation: Train data shape: Index(['months_as_customer', 'age', 'policy_state', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_state', 'incident_city',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'total_claim_amount', 'injury_claim',
       'property_claim', 'vehicle_claim', 'auto_make', 'auto_model',
       'fraud_reported', 'loss_ratio', 'profitability', 'vehicle_age',
       'incident_year', 'incident_month', 'incident_day', 'policy_bind_year',
       'policy_bind_month', 'policy_bind_day', 'Parked Car',
       'Single Vehicle Collision', 'Vehicle Theft', 'Rear Collision',
       'Side Collision', 'Fire', 'None', 'Other', 'Police', 'Minor Damage',
       'Total Loss', 'Trivial Damage', '250/500', '500/1000', 'age_group'],
      dtype='object')]
[2025-01-22 09:44:58,542: INFO: data_transformation: Successfully saved test data to artifacts/data_transformation\test.csv]
[2025-01-22 09:44:58,543: INFO: data_transformation: Test data shape: Index(['months_as_customer', 'age', 'policy_state', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_state', 'incident_city',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'total_claim_amount', 'injury_claim',
       'property_claim', 'vehicle_claim', 'auto_make', 'auto_model',
       'fraud_reported', 'loss_ratio', 'profitability', 'vehicle_age',
       'incident_year', 'incident_month', 'incident_day', 'policy_bind_year',
       'policy_bind_month', 'policy_bind_day', 'Parked Car',
       'Single Vehicle Collision', 'Vehicle Theft', 'Rear Collision',
       'Side Collision', 'Fire', 'None', 'Other', 'Police', 'Minor Damage',
       'Total Loss', 'Trivial Damage', '250/500', '500/1000', 'age_group'],
      dtype='object')]
[2025-01-22 09:44:58,546: INFO: data_transformation: Data transformation completed successfully and saved to artifacts/data_transformation]
[2025-01-22 09:44:58,547: INFO: data_transformation: Train data shape: (750, 51)]
[2025-01-22 09:44:58,548: INFO: data_transformation: Test data shape: (250, 51)]
[2025-01-22 09:44:58,549: INFO: main: >>>>>>>>>>>>>>>Stage Data Transformation Stage completed<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:58,549: INFO: main: >>>>>>>>>>>>>>>Stage Model Trainer Stage started<<<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:44:58,549: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\config\config.yaml]
[2025-01-22 09:44:58,554: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\params.yaml]
[2025-01-22 09:44:58,556: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\schema.yaml]
[2025-01-22 09:44:58,568: INFO: configuration: Config: {'artifacts_root': 'artifacts', 'data_ingestion': {'root_dir': 'artifacts/data_ingestion', 'source_url': 'https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', 'local_data_file': 'artifacts/data_ingestion/data.zip', 'unzip_dir': 'artifacts/data_ingestion'}, 'data_validation': {'root_dir': 'artifacts/data_validation', 'unzip_data_dir': 'artifacts/data_ingestion/insurance_claims.csv', 'STATUS_FILE': 'artifacts/data_validation/STATUS.txt'}, 'data_transformation': {'root_dir': 'artifacts/data_transformation', 'data_path': 'artifacts/data_ingestion/insurance_claims.csv'}, 'model_trainer': {'root_dir': 'artifacts/model_trainer', 'train_data_path': 'artifacts/data_transformation/train.csv', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_name': 'GradientBoostingClassifier.joblib', 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}, 'model_evaluation': {'root_dir': 'artifacts/model_evaluation', 'artifact_dir': 'artifacts/model_evaluation', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_path': 'artifacts/model_trainer/GradientBoostingClassifier.joblib', 'metric_file_name': 'artifacts/model_evaluation/metrics.json', 'mlflow_uri': 'https://dagshub.com/ArpitKadam/Insurance-Fraud-Detection.mlflow', 'target_column': 'fraud_reported', 'mlflow_experiment_name': 'Insurance-Fraud-Detection'}}]
[2025-01-22 09:44:58,570: INFO: configuration: Params: {'GradientBoostingClassifier': {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}}]
[2025-01-22 09:44:58,570: INFO: configuration: Schema: {'COLUMNS': {'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'}, 'TARGET_COLUMN': {'fraud_reported': 'object'}}]
[2025-01-22 09:44:58,571: INFO: configuration: Artifacts Root: artifacts]
[2025-01-22 09:44:58,572: INFO: common: Directory created: artifacts]
[2025-01-22 09:44:58,573: INFO: configuration: Config: {'root_dir': 'artifacts/model_trainer', 'train_data_path': 'artifacts/data_transformation/train.csv', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_name': 'GradientBoostingClassifier.joblib', 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}]
[2025-01-22 09:44:58,576: INFO: configuration: Params: {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}]
[2025-01-22 09:44:58,577: INFO: configuration: Target Column: fraud_reported]
[2025-01-22 09:44:58,579: INFO: common: Directory created: artifacts/model_trainer]
[2025-01-22 09:44:58,580: INFO: configuration: Root Dir: artifacts/model_trainer]
[2025-01-22 09:44:58,581: INFO: configuration: Model Trainer Config: ModelTrainerConfig(root_dir='artifacts/model_trainer', train_data_path='artifacts/data_transformation/train.csv', test_data_path='artifacts/data_transformation/test.csv', model_name='GradientBoostingClassifier.joblib', learning_rate=0.1, max_depth=5, n_estimators=100, subsample=0.8, target_column='fraud_reported')]
[2025-01-22 09:44:58,581: INFO: configuration: Model Trainer Config Root Dir: artifacts/model_trainer]
[2025-01-22 09:44:58,581: INFO: configuration: Model Trainer Config Train Data Path: artifacts/data_transformation/train.csv]
[2025-01-22 09:44:58,582: INFO: configuration: Model Trainer Config Test Data Path: artifacts/data_transformation/test.csv]
[2025-01-22 09:44:58,582: INFO: configuration: Model Trainer Config Model Name: GradientBoostingClassifier.joblib]
[2025-01-22 09:44:58,583: INFO: configuration: Model Trainer Config Learning Rate: 0.1]
[2025-01-22 09:44:58,583: INFO: configuration: Model Trainer Config Max Depth: 5]
[2025-01-22 09:44:58,583: INFO: configuration: Model Trainer Config N Estimators: 100]
[2025-01-22 09:44:58,584: INFO: configuration: Model Trainer Config Subsample: 0.8]
[2025-01-22 09:44:58,584: INFO: configuration: Model Trainer Config Target Column: fraud_reported]
[2025-01-22 09:44:58,585: INFO: model_trainer: Loading train and test data]
[2025-01-22 09:44:58,736: INFO: model_trainer: Train Data:    months_as_customer  age  policy_state  policy_deductable  ...  Trivial Damage  250/500  500/1000  age_group
0                 190   40             2               2000  ...               1        0         1          2
1                 157   31             1                500  ...               0        0         1          1
2                 437   58             1               2000  ...               0        0         1          4
3                 344   51             0               1000  ...               0        0         0          3
4                 239   39             1               2000  ...               0        1         0          2

[5 rows x 51 columns]]
[2025-01-22 09:44:58,816: INFO: model_trainer: Test Data:    months_as_customer  age  policy_state  policy_deductable  ...  Trivial Damage  250/500  500/1000  age_group
0                 225   41             2               2000  ...               0        0         1          2
1                 129   30             0               2000  ...               0        0         1          1
2                 398   55             2               2000  ...               0        1         0          3
3                 111   27             1                500  ...               0        1         0          1
4                   4   34             2                500  ...               0        0         1          1

[5 rows x 51 columns]]
[2025-01-22 09:44:58,818: INFO: model_trainer: Dropping target column from train and test data]
[2025-01-22 09:44:58,921: INFO: model_trainer: Train X:    months_as_customer  age  policy_state  policy_deductable  ...  Trivial Damage  250/500  500/1000  age_group
0                 190   40             2               2000  ...               1        0         1          2
1                 157   31             1                500  ...               0        0         1          1
2                 437   58             1               2000  ...               0        0         1          4
3                 344   51             0               1000  ...               0        0         0          3
4                 239   39             1               2000  ...               0        1         0          2

[5 rows x 50 columns]]
[2025-01-22 09:44:58,925: INFO: model_trainer: Train Y: 0    0
1    1
2    0
3    1
4    1
Name: fraud_reported, dtype: int64]
[2025-01-22 09:44:59,006: INFO: model_trainer: Test X:    months_as_customer  age  policy_state  policy_deductable  ...  Trivial Damage  250/500  500/1000  age_group
0                 225   41             2               2000  ...               0        0         1          2
1                 129   30             0               2000  ...               0        0         1          1
2                 398   55             2               2000  ...               0        1         0          3
3                 111   27             1                500  ...               0        1         0          1
4                   4   34             2                500  ...               0        0         1          1

[5 rows x 50 columns]]
[2025-01-22 09:44:59,009: INFO: model_trainer: Test Y: 0    1
1    0
2    1
3    0
4    1
Name: fraud_reported, dtype: int64]
[2025-01-22 09:44:59,011: INFO: model_trainer: Train X columns: Index(['months_as_customer', 'age', 'policy_state', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_state', 'incident_city',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'total_claim_amount', 'injury_claim',
       'property_claim', 'vehicle_claim', 'auto_make', 'auto_model',
       'loss_ratio', 'profitability', 'vehicle_age', 'incident_year',
       'incident_month', 'incident_day', 'policy_bind_year',
       'policy_bind_month', 'policy_bind_day', 'Parked Car',
       'Single Vehicle Collision', 'Vehicle Theft', 'Rear Collision',
       'Side Collision', 'Fire', 'None', 'Other', 'Police', 'Minor Damage',
       'Total Loss', 'Trivial Damage', '250/500', '500/1000', 'age_group'],
      dtype='object')]
[2025-01-22 09:44:59,014: INFO: model_trainer: Test X columns: Index(['months_as_customer', 'age', 'policy_state', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_state', 'incident_city',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'total_claim_amount', 'injury_claim',
       'property_claim', 'vehicle_claim', 'auto_make', 'auto_model',
       'loss_ratio', 'profitability', 'vehicle_age', 'incident_year',
       'incident_month', 'incident_day', 'policy_bind_year',
       'policy_bind_month', 'policy_bind_day', 'Parked Car',
       'Single Vehicle Collision', 'Vehicle Theft', 'Rear Collision',
       'Side Collision', 'Fire', 'None', 'Other', 'Police', 'Minor Damage',
       'Total Loss', 'Trivial Damage', '250/500', '500/1000', 'age_group'],
      dtype='object')]
[2025-01-22 09:44:59,019: INFO: model_trainer: Initializing Standard Scaler]
[2025-01-22 09:44:59,020: INFO: model_trainer: Fitting Standard Scaler on train data]
[2025-01-22 09:44:59,027: INFO: model_trainer: Transforming train data using Standard Scaler]
[2025-01-22 09:44:59,030: INFO: model_trainer: Transforming test data using Standard Scaler]
[2025-01-22 09:44:59,031: INFO: model_trainer: Scaling train and test data]
[2025-01-22 09:44:59,033: INFO: model_trainer: Train X Scaled: [[-0.17568976  0.06001928  1.19438026  1.38538282 -1.19709926 -0.48765687
  -0.92543808  0.07538275 -0.87928756 -0.31491112  0.47828818 -0.97017097
   0.37213999 -0.52806058 -0.27039333 -0.80726326 -0.6567326   1.24340941
  -0.49079132  1.53238843 -1.90369635 -1.41957716 -1.44073592 -1.9072353
   0.6314373   1.39261906 -1.59549446  1.75799529  0.70659478  0.
   0.91185832 -1.37467896  0.7137124  -1.5864889   1.2648772   3.59010987
  -0.90575292 -0.27294426  1.09812675 -0.61742649 -0.51454395  3.66375176
  -0.52902125 -0.62773565 -0.64842466 -0.52489066  3.74165739 -0.75870301
   1.56723361  0.09727771]
 [-0.45978239 -0.90919151 -0.03609391 -1.05749441  0.00382513  2.60437036
   1.08056932 -0.42941247 -0.63367651  0.30662398  0.61519861 -0.53758668
  -0.55820998 -1.52065565 -1.4409272   2.15094902 -0.6567326   1.24340941
   0.40919277 -0.65257606 -0.31642476 -0.59967629  0.33087258 -0.37286164
  -1.60242108  1.21395599 -0.33922274  0.31479404 -0.99850845  0.
   0.91185832 -0.00910383 -1.57440254  0.45895971 -1.5652478  -0.27854301
  -0.90575292 -0.27294426  1.09812675 -0.61742649 -0.51454395 -0.27294426
   1.89028324 -0.62773565 -0.64842466 -0.52489066 -0.26726124 -0.75870301
   1.56723361 -0.93030372]
 [ 1.95070047  1.99844084 -0.03609391  1.38538282 -0.26617971 -0.48765687
   1.08056932 -1.43900291 -1.12489862  0.30662398  1.53033676 -0.17292885
   0.37213999  0.46453449  1.63172422 -0.80726326  1.52268975 -1.19464826
  -1.39077541 -0.65257606 -0.00587163  0.66582288  0.65298321 -0.36799061
  -0.60959513  0.94596139  0.01642878 -0.02381235  0.19506381  0.
  -0.91185832  0.5598858   1.11749739  0.45895971 -1.6784528  -0.27854301
   1.10405385 -0.27294426 -0.91064169 -0.61742649 -0.51454395 -0.27294426
  -0.52902125 -0.62773565 -0.64842466  1.90515869 -0.26726124 -0.75870301
   1.56723361  2.15244056]
 [ 1.15007581  1.24461023 -1.26656808 -0.243202   -1.219179   -0.48765687
  -0.92543808  1.0849732   1.08560085 -0.93644622 -0.85118416 -0.43390945
  -1.02338497 -0.03176304  0.90014055  1.16487826 -0.6567326   1.24340941
   0.40919277  1.53238843  0.74559028  1.9016155   0.74047005  0.33127245
  -1.1060081   1.66061366  1.28669323 -0.87653026 -0.14595684  0.
   0.91185832 -1.37467896  0.8483074  -0.12545418  1.2648772  -0.27854301
  -0.90575292 -0.27294426 -0.91064169  1.61962601  1.94346857 -0.27294426
  -0.52902125 -0.62773565 -0.64842466 -0.52489066 -0.26726124 -0.75870301
  -0.63806697  1.12485914]
 [ 0.24614473 -0.04767081 -0.03609391  1.38538282 -2.59300662 -0.48765687
  -0.92543808  0.07538275  0.8399898   1.54969419  0.74130033 -0.37313315
   0.37213999  0.96083203 -0.27039333 -0.80726326 -0.6567326   1.24340941
   1.30917685  1.53238843  1.22445555  1.62039346  0.0226803   1.27949913
  -1.1060081   1.66061366  3.76961276 -1.50529321 -1.51003942  0.
  -0.91185832 -1.26088103 -1.57440254  0.45895971  0.2460322  -0.27854301
   1.10405385 -0.27294426 -0.91064169 -0.61742649  1.94346857 -0.27294426
  -0.52902125 -0.62773565 -0.64842466 -0.52489066 -0.26726124  1.3180388
  -0.63806697  0.09727771]]]
[2025-01-22 09:44:59,040: INFO: model_trainer: Test X Scaled: [[ 0.12562059  0.16770936  1.19438026  1.38538282 -0.62922315 -0.48765687
   1.08056932 -0.42941247 -0.87928756  0.92815909  0.63321315 -0.34453253
  -1.02338497 -0.03176304  1.19277402  1.16487826 -0.6567326   1.24340941
   0.40919277 -0.65257606  0.55389082 -0.27686508  0.97907052  0.59106058
   1.37605676 -0.12601702  0.69595078 -0.62037039 -0.99850845  0.
  -0.91185832  0.5598858  -1.17061755  0.45895971 -1.2256328  -0.27854301
  -0.90575292 -0.27294426 -0.91064169  1.61962601 -0.51454395 -0.27294426
  -0.52902125  1.59302726 -0.64842466 -0.52489066 -0.26726124 -0.75870301
   1.56723361  0.09727771]
 [-0.70083067 -1.01688159 -1.26656808  1.38538282 -1.35297073 -0.48765687
  -0.92543808  1.58976842  1.08560085 -1.55798133  1.00431247  0.94964527
   0.37213999 -0.52806058 -0.70934353 -0.80726326 -0.6567326   0.02438058
   1.30917685 -0.65257606  0.7057168   1.13320599 -0.22188518  0.74693346
   1.12785027 -0.39401162  1.35232807 -0.85181702 -0.6574878   0.
  -0.91185832 -0.12290176  0.7137124  -0.41766113 -1.1124278  -0.27854301
   1.10405385 -0.27294426 -0.91064169 -0.61742649 -0.51454395 -0.27294426
   1.89028324 -0.62773565 -0.64842466  1.90515869 -0.26726124 -0.75870301
   1.56723361 -0.93030372]
 [ 1.61495464  1.67537058  1.19438026  1.38538282  0.19847978 -0.48765687
   1.08056932  0.58017798 -0.63367651  1.54969419  1.53393966 -0.8271679
   0.83731497 -0.52806058  0.90014055 -0.80726326 -0.6567326   0.02438058
   1.30917685  1.53238843 -0.73663    -0.88287876 -0.23779188 -0.7338589
  -1.1060081   1.57128212 -0.73035712  0.75394766  1.21812575  0.
  -0.91185832 -0.6918914  -1.43980754  0.16675276 -1.5652478  -0.27854301
   1.10405385 -0.27294426  1.09812675 -0.61742649  1.94346857 -0.27294426
  -0.52902125 -0.62773565 -0.64842466 -0.52489066 -0.26726124  1.3180388
  -0.63806697  1.12485914]
 [-0.85579028 -1.33995185 -0.03609391 -1.05749441  0.4386072   1.27921583
  -0.92543808  1.0849732   1.3312119  -1.55798133  0.98990085  0.94964527
   0.83731497  1.45712956  0.02224014 -0.80726326  1.52268975  1.24340941
   1.30917685 -0.65257606  1.34254243  1.73129792  1.72270866  0.95314029
  -1.60242108  1.03529292  0.8124896  -1.28496602 -0.6574878   0.
  -0.91185832  0.33228995  0.98290239 -1.5864889  -1.3388378  -0.27854301
   1.10405385 -0.27294426 -0.91064169  1.61962601 -0.51454395 -0.27294426
  -0.52902125  1.59302726 -0.64842466  1.90515869 -0.26726124  1.3180388
  -0.63806697 -0.93030372]
 [-1.77693909 -0.58612125  1.19438026 -1.05749441  0.10683655 -0.48765687
  -0.92543808 -0.93420769 -0.87928756 -0.31491112 -0.85118416  0.94964527
   1.30248996  0.46453449 -1.73356067  2.15094902 -0.6567326  -1.19464826
  -1.39077541 -0.65257606  0.41893439 -0.34023906  0.85181694  0.45250691
  -0.85780162  1.12462446  0.22931256 -0.4043124   1.55914639  0.
   0.91185832 -0.23669969  0.17533242 -0.41766113  0.9252622  -0.27854301
  -0.90575292 -0.27294426 -0.91064169  1.61962601 -0.51454395 -0.27294426
  -0.52902125  1.59302726 -0.64842466 -0.52489066 -0.26726124 -0.75870301
   1.56723361 -0.93030372]]]
[2025-01-22 09:44:59,047: INFO: model_trainer: Initializing Gradient Boosting Classifier]
[2025-01-22 09:44:59,050: INFO: model_trainer: Model: GradientBoostingClassifier(max_depth=5, subsample=0.8)]
[2025-01-22 09:44:59,051: INFO: model_trainer: Fitting model on train data]
[2025-01-22 09:45:00,158: INFO: model_trainer: Dumping model to disk]
[2025-01-22 09:45:00,173: INFO: model_trainer: Model trained and saved to artifacts/model_trainer/GradientBoostingClassifier.joblib]
[2025-01-22 09:45:00,175: INFO: model_trainer: Model: GradientBoostingClassifier(max_depth=5, subsample=0.8)]
[2025-01-22 09:45:00,176: INFO: stage_04_model_trainer: Model training completed successfully]
[2025-01-22 09:45:00,177: INFO: main: >>>>>>>>>>>>>>>Stage Model Trainer Stage completed<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:45:00,177: INFO: main: >>>>>>>>>>>>>>>Stage Model Evaluation Stage started<<<<<<<<<<<<<<<<<<<<<<<<<]
[2025-01-22 09:45:00,178: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\config\config.yaml]
[2025-01-22 09:45:00,184: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\params.yaml]
[2025-01-22 09:45:00,188: INFO: common: Attempting to read YAML file from: C:\Users\Arpit Kadam\Desktop\Insurance-Fraud-Detection\schema.yaml]
[2025-01-22 09:45:00,199: INFO: configuration: Config: {'artifacts_root': 'artifacts', 'data_ingestion': {'root_dir': 'artifacts/data_ingestion', 'source_url': 'https://github.com/ArpitKadam/Insurance-Fraud-Detection/raw/refs/heads/main/data/data.zip', 'local_data_file': 'artifacts/data_ingestion/data.zip', 'unzip_dir': 'artifacts/data_ingestion'}, 'data_validation': {'root_dir': 'artifacts/data_validation', 'unzip_data_dir': 'artifacts/data_ingestion/insurance_claims.csv', 'STATUS_FILE': 'artifacts/data_validation/STATUS.txt'}, 'data_transformation': {'root_dir': 'artifacts/data_transformation', 'data_path': 'artifacts/data_ingestion/insurance_claims.csv'}, 'model_trainer': {'root_dir': 'artifacts/model_trainer', 'train_data_path': 'artifacts/data_transformation/train.csv', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_name': 'GradientBoostingClassifier.joblib', 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}, 'model_evaluation': {'root_dir': 'artifacts/model_evaluation', 'artifact_dir': 'artifacts/model_evaluation', 'test_data_path': 'artifacts/data_transformation/test.csv', 'model_path': 'artifacts/model_trainer/GradientBoostingClassifier.joblib', 'metric_file_name': 'artifacts/model_evaluation/metrics.json', 'mlflow_uri': 'https://dagshub.com/ArpitKadam/Insurance-Fraud-Detection.mlflow', 'target_column': 'fraud_reported', 'mlflow_experiment_name': 'Insurance-Fraud-Detection'}}]
[2025-01-22 09:45:00,201: INFO: configuration: Params: {'GradientBoostingClassifier': {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'subsample': 0.8}}]
[2025-01-22 09:45:00,202: INFO: configuration: Schema: {'COLUMNS': {'months_as_customer': 'int64', 'age': 'int64', 'policy_number': 'int64', 'policy_bind_date': 'object', 'policy_state': 'object', 'policy_csl': 'object', 'policy_deductable': 'int64', 'policy_annual_premium': 'float64', 'umbrella_limit': 'int64', 'insured_zip': 'int64', 'insured_sex': 'object', 'insured_education_level': 'object', 'insured_occupation': 'object', 'insured_hobbies': 'object', 'insured_relationship': 'object', 'capital-gains': 'int64', 'capital-loss': 'int64', 'incident_date': 'object', 'incident_type': 'object', 'collision_type': 'object', 'incident_severity': 'object', 'authorities_contacted': 'object', 'incident_state': 'object', 'incident_city': 'object', 'incident_location': 'object', 'incident_hour_of_the_day': 'int64', 'number_of_vehicles_involved': 'int64', 'property_damage': 'object', 'bodily_injuries': 'int64', 'witnesses': 'int64', 'police_report_available': 'object', 'total_claim_amount': 'int64', 'injury_claim': 'int64', 'property_claim': 'int64', 'vehicle_claim': 'int64', 'auto_make': 'object', 'auto_model': 'object', 'auto_year': 'int64', 'fraud_reported': 'object'}, 'TARGET_COLUMN': {'fraud_reported': 'object'}}]
[2025-01-22 09:45:00,203: INFO: configuration: Artifacts Root: artifacts]
[2025-01-22 09:45:00,204: INFO: common: Directory created: artifacts]
[2025-01-22 09:45:00,205: INFO: common: Directory created: artifacts/model_evaluation]
[2025-01-22 09:45:00,207: INFO: model_evaluation: Loading test data and trained model.]
[2025-01-22 09:45:00,249: INFO: model_evaluation: Model loaded successfully: GradientBoostingClassifier(max_depth=5, subsample=0.8)]
[2025-01-22 09:45:00,250: INFO: model_evaluation: Preparing test data for evaluation.]
[2025-01-22 09:45:00,253: INFO: model_evaluation: Test data shape: Index(['months_as_customer', 'age', 'policy_state', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_state', 'incident_city',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'total_claim_amount', 'injury_claim',
       'property_claim', 'vehicle_claim', 'auto_make', 'auto_model',
       'loss_ratio', 'profitability', 'vehicle_age', 'incident_year',
       'incident_month', 'incident_day', 'policy_bind_year',
       'policy_bind_month', 'policy_bind_day', 'Parked Car',
       'Single Vehicle Collision', 'Vehicle Theft', 'Rear Collision',
       'Side Collision', 'Fire', 'None', 'Other', 'Police', 'Minor Damage',
       'Total Loss', 'Trivial Damage', '250/500', '500/1000', 'age_group'],
      dtype='object')]
[2025-01-22 09:45:00,255: INFO: model_evaluation: Test data shape: (250,)]
[2025-01-22 09:45:00,263: INFO: model_evaluation: Test data scaled successfully]
[2025-01-22 09:45:00,264: INFO: model_evaluation: Starting MLflow run.]
[2025-01-22 09:45:01,289: INFO: model_evaluation: Making predictions and evaluating metrics.]
[2025-01-22 09:45:01,346: INFO: model_evaluation: Metrics: {'f1_score': 0.8392156862745098, 'roc_auc_score': 0.8374975975398807, 'accuracy_score': 0.836, 'precision_score': 0.7985074626865671, 'recall_score': 0.8842975206611571, 'confusion_matrix': [[102, 27], [14, 107]], 'classification_report': {'0': {'precision': 0.8793103448275862, 'recall': 0.7906976744186046, 'f1-score': 0.8326530612244898, 'support': 129.0}, '1': {'precision': 0.7985074626865671, 'recall': 0.8842975206611571, 'f1-score': 0.8392156862745098, 'support': 121.0}, 'accuracy': 0.836, 'macro avg': {'precision': 0.8389089037570767, 'recall': 0.8374975975398808, 'f1-score': 0.8359343737494997, 'support': 250.0}, 'weighted avg': {'precision': 0.840201749871333, 'recall': 0.836, 'f1-score': 0.8358293717486995, 'support': 250.0}}}]
[2025-01-22 09:45:01,349: INFO: common: json file saved at: artifacts\model_evaluation\metrics.json]
[2025-01-22 09:45:01,350: INFO: model_evaluation: Metrics saved to artifacts/model_evaluation/metrics.json]
[2025-01-22 09:45:01,351: INFO: model_evaluation: Logging metrics to MLflow.]
[2025-01-22 09:45:03,751: INFO: model_evaluation: Metrics logged to MLflow.]
[2025-01-22 09:45:03,752: INFO: model_evaluation: Logging parameters to MLflow.]
[2025-01-22 09:45:04,325: INFO: model_evaluation: Parameters logged to MLflow.]
[2025-01-22 09:45:04,326: INFO: model_evaluation: Logging model with signature.]
[2025-01-22 09:45:24,023: INFO: model_evaluation: Model logged with signature.]
[2025-01-22 09:45:24,024: INFO: model_evaluation: Logging classification report and confusion matrix.]
[2025-01-22 09:45:24,052: INFO: model_evaluation: Classification report:               precision    recall  f1-score   support

           0       0.88      0.79      0.83       129
           1       0.80      0.88      0.84       121

    accuracy                           0.84       250
   macro avg       0.84      0.84      0.84       250
weighted avg       0.84      0.84      0.84       250
]
[2025-01-22 09:45:24,055: INFO: model_evaluation: Confusion matrix: [[102  27]
 [ 14 107]]]
[2025-01-22 09:45:24,056: INFO: model_evaluation: Saving classification report and confusion matrix as text files.]
[2025-01-22 09:45:24,056: INFO: model_evaluation: Classification report path: artifacts\model_evaluation\classification_report.txt]
[2025-01-22 09:45:24,057: INFO: model_evaluation: Confusion matrix path: artifacts\model_evaluation\confusion_matrix.txt]
[2025-01-22 09:45:24,060: INFO: model_evaluation: Classification report and confusion matrix saved as text files.]
[2025-01-22 09:45:25,217: INFO: model_evaluation: Classification report and confusion matrix logged as artifacts in MLflow.]
[2025-01-22 09:45:25,218: INFO: model_evaluation: Model and metrics logged successfully.]
[2025-01-22 09:45:26,187: INFO: stage_05_model_evaluation: Model evaluation completed successfully]
[2025-01-22 09:45:26,188: INFO: main: >>>>>>>>>>>>>>>Stage Model Evaluation Stage completed<<<<<<<<<<<<<<<<<<<<<<<]
